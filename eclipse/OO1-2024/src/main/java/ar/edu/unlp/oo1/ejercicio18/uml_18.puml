@startuml

class Empleado {
- nombre: String
- apellido: String
- cuil: Integer
- fechaNac: LocalDate
- hijos: Integer
- coyuge: Integer
+ <<create>> Empleado(nombre:String,apellido:String,cuil:Integer,fechaNac:LocalDate,hijos:Integer)
+ generarRecibo(): Recibo
+ agregarContrato(contrato: Contrato)
+ getAntiguedad(): Integer
}
Empleado -d-> Contrato : -contratos 0..*
Empleado -> Recibo : -recibos 0..*


abstract Contrato {
- empleado: Empleado
- fechaInicio: LocalDate
+ <<abstract>> esVigente(): Boolean
+ <<abstract>> monto(): Real
+ <<abstract>> mesesTrabajados(): Integer
}
Contrato -u-> Empleado : empleado

class ContratoPorHoras extends Contrato{
-horas: Integer
-valorHoras: Real
-fechaFin: : LocalDate
+ <<create>> ContratoPorHoras(fechaInicio:LocalDate, fechaFin:LocalDate,empleado:Empleado, horas: Integer, valorHoras: Real)
+ monto(): Real
+ esVigente(): Boolean
+ mesesTrabajados(): Integer
}


class ContratoDePlanta extends Contrato{
-sueldoMensual: Real
-montoConyuge: Real
-montoHijos: Real
+ <<create>> ContratoDePlata(fechaInicio: LocalDate, sueldoMensual: Real, montoConyuge: Real, montoHijos: Real, empleado: Empleado)
+ monto(): Real
+ esVigente(): Boolean
+ mesesTrabajados(): Integer
}


class Recibo {
- nombre: String
- apellido: String
- cuil: Integer
- antiguedad: Integer
- fecha: LocalDate
- montoAcobrar: Real
+ <<create>> Recibo (nombre: String, apellido:String, cuil: Integer,antiguedad: Integer, montoACobrar: Real)
}

@enduml
